object ProjectDependencies {
    val kotlin = "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin}"
    val kotlin_coroutine =
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.kotlin_coroutine}"
    val kotlin_coroutine_android =
        "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.kotlin_coroutine}"
    val kotlin_work = "androidx.work:work-runtime-ktx:${Versions.kotlin_work}"
    val coreKtx = "androidx.core:core-ktx:${Versions.coreKtx}"
    val fragmentKtx = "androidx.fragment:fragment-ktx:${Versions.fragmentKtx}"
    val appcompat = "androidx.appcompat:appcompat:${Versions.supportLibrary}"
    val constraintlayout = "androidx.constraintlayout:constraintlayout:${Versions.constrantLayout}"
    val material = "com.google.android.material:material:${Versions.design}"
    val recyclerview = "androidx.recyclerview:recyclerview:${Versions.recyclerview}"
    val lifecycleCommon = "androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycle}"
    val lifecycleViewModelKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.lifecycle}"
    val lifecycleLiveDataKtx = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.lifecycle}"
    val collectionKtx = "androidx.collection:collection-ktx:${Versions.collectionKtx}"
    val lifecycle = "androidx.lifecycle:lifecycle-extensions:${Versions.lifecycle}"
    val lifecycleCompiler = "androidx.lifecycle:lifecycle-compiler:${Versions.lifecycle}"

    val lifecycleReactivestreams =
        "androidx.lifecycle:lifecycle-reactivestreams:${Versions.lifecycle}"
    val lottie = "com.airbnb.android:lottie:${Versions.lottie}"
    val transition = "androidx.transition:transition:${Versions.transition}"

    val photoView = "com.github.chrisbanes:PhotoView:${Versions.photoView}"
    val htextviewScale = "com.hanks:htextview-scale:${Versions.htextView}"
    val htextviewBase = "com.hanks:htextview-base:${Versions.htextView}"
    val shadowLayout = "com.github.lihangleo2:ShadowLayout:${Versions.shadowLayout}"
    val whatIf = "com.github.skydoves:whatif:${Versions.whatIf}"

    val flexbox = "com.google.android:flexbox:${Versions.flexbox}"
    val recyclerview_anim = "jp.wasabeef:recyclerview-animators:${Versions.recyclerview_anim}"
    val room = "androidx.room:room-runtime:${Versions.room}"
    val roomCompiler = "androidx.room:room-compiler:${Versions.room}"
    val roomKtx = "androidx.room:room-ktx:${Versions.room}"
    val roomRx = "androidx.room:room-rxjava2:${Versions.room}"
    val retrofit2 = "com.squareup.retrofit2:retrofit:${Versions.retrofit2}"
    val googleMaps = "com.google.android.gms:play-services-maps:${Versions.googleMaps}"
    val facebookSdk = "com.facebook.android:facebook-core:${Versions.facebookSdk}"
    val okhttp = "com.squareup.okhttp3:okhttp:${Versions.okhttp}"
    val okhttp_logger = "com.squareup.okhttp3:logging-interceptor:${Versions.okhttp}"
    val tensorFlow = "org.tensorflow:tensorflow-lite:${Versions.tensorFlow}"
    val generex = "com.github.mifmif:generex:${Versions.generex}"
    val moshi = "com.squareup.retrofit2:converter-moshi:${Versions.moshi}"
    val diskCache = "com.jakewharton:disklrucache:${Versions.diskCache}"
    val junit = "junit:junit:${Versions.junit}"
    val junitExt = "androidx.test.ext:junit:${Versions.junitExt}"
    val mockito = "org.mockito:mockito-core:${Versions.mockito}"
    val truth = "com.google.truth:truth:${Versions.truth}"
    val json = "org.json:json:${Versions.json}"
    val glide = "com.github.bumptech.glide:glide:${Versions.glide}"
    val glideProccessor = "com.github.bumptech.glide:compiler:${Versions.glide}"
    val okhttpLogger = "com.squareup.okhttp3:logging-interceptor:${Versions.okhttp}"
    val chuck = "com.readystatesoftware.chuck:library:${Versions.chuck}"
    val chuckNoOp = "com.readystatesoftware.chuck:library-no-op:${Versions.chuck}"
    val multidex = "com.android.support:multidex:${Versions.multidex}"
    val zxing = "com.google.zxing:core:${Versions.zxing}"
    val zxingAndroid = "com.journeyapps:zxing-android-embedded:${Versions.zxingAndroid}"
    val firebasebom = "com.google.firebase:firebase-bom:${Versions.firebase}"
    val vision = "com.google.firebase:firebase-ml-vision"
    val firebaseCore = "com.google.firebase:firebase-analytics-ktx"
    val crashlytics = "com.google.firebase:firebase-crashlytics-ktx"
    val firebaseMessaging = "com.google.firebase:firebase-messaging-ktx"
    val gson = "com.google.code.gson:gson:${Versions.gson}"
    val rollingText = "com.github.YvesCheung:RollingText:${Versions.rollingText}"
    val photoCompressor = "id.zelory:compressor:${Versions.photoCompressor}"
    val circleindicator = "me.relex:circleindicator:${Versions.circleIndicator}"
    val fab = "uk.co.markormesher:android-fab:${Versions.fab}"
    val playCore = "com.google.android.play:core:${Versions.playCore}"
    val playService = "com.google.android.gms:play-services-auth:${Versions.playService}"
    val playAuthApi = "com.google.android.gms:play-services-auth-api-phone:${Versions.playAuthApi}"
    val swiperLayout = "com.chauthai.swipereveallayout:swipe-reveal-layout:${Versions.swipeLayout}"
    val rootbeer = "com.scottyab:rootbeer-lib:${Versions.rootbeer}"
    val commonsLang = "org.apache.commons:commons-lang3:${Versions.commonsLang}"
    val commonsCollections =
        "org.apache.commons:commons-collections4:${Versions.commonsCollections}"
    val commonsIO = "commons-io:commons-io:${Versions.commonsIO}"
    val smartcards = "net.sf.scuba:scuba-smartcards:${Versions.smartcards}"
    val viewpager2 = "androidx.viewpager2:viewpager2:${Versions.viewpager2}"
    val glideOkHttpIntegration =
        "com.github.bumptech.glide:okhttp3-integration:${Versions.glideOkhhtpIntegration}"
    val playServicesVision =
        "com.google.android.gms:play-services-vision:${Versions.playServicesVision}"
    val playServicesVisionCommon =
        "com.google.android.gms:play-services-vision-common:${Versions.playServicesVisionCommon}"
    val findBugs = "com.google.code.findbugs:jsr305:${Versions.findBugs}"
    val dagger = "com.google.dagger:dagger:${Versions.dagger}"
    val daggerCompiler = "com.google.dagger:dagger-compiler:${Versions.dagger}"
    val desugar = "com.android.tools:desugar_jdk_libs:${Versions.desugar}"
    val threetenabp = "com.jakewharton.threetenabp:threetenabp:${Versions.threetenabp}"
    val asynclayoutinflater =
        "androidx.asynclayoutinflater:asynclayoutinflater:${Versions.asynclayoutinflater}"
    val timber = "com.jakewharton.timber:timber:${Versions.timber}"
    val permissionsdispatcher =
        "com.github.permissions-dispatcher:permissionsdispatcher:${Versions.permissionsdispatcher}"
    val permissionsdispatcherProcessor =
        "com.github.permissions-dispatcher:permissionsdispatcher-processor:${Versions.permissionsdispatcher}"
    val navigationComponent =
        "android.arch.navigation:navigation-fragment-ktx:${Versions.navigationComponent}"
    val navigationUiKtx =
        "androidx.navigation:navigation-ui-ktx:${Versions.navigationUi}"
    val supportDesign = "com.android.support:design:${Versions.supportDesign}"
    val koinViewModel = "org.koin:koin-androidx-viewmodel:${Versions.koin}"
    val koinCore = "org.koin:koin-core:${Versions.koin}"
    val koinAndroid = "io.insert-koin:koin-android:${Versions.koin}"
    val pawegio = "com.pawegio.kandroid:kandroid:${Versions.pawegio}"
    val kotPref = "com.chibatching.kotpref:kotpref:${Versions.kotPref}"
    val kotPrefGsonSupport = "com.chibatching.kotpref:gson-support:${Versions.kotPref}"
    val kotPrefEnum = "com.chibatching.kotpref:enum-support:${Versions.kotprefEnum}"
    val rxAndroid = "io.reactivex.rxjava2:rxandroid:${Versions.rxAndroid}"
    val rxKotlin = "io.reactivex.rxjava2:rxkotlin:${Versions.rxKotlin}"
    val anko = "org.jetbrains.anko:anko:${Versions.anko}"
    val groupie = "com.xwray:groupie:${Versions.groupie}"
    val groupieExtension = "com.xwray:groupie-kotlin-android-extensions:${Versions.groupie}"
    val legacySupport = "androidx.legacy:legacy-support-v4:${Versions.legacy_support}"
    val firebaseBom = "com.google.firebase:firebase-bom:${Versions.firebaseBom}"
    val firebaseFirestore = "com.google.firebase:firebase-firestore-ktx"
    val firebaseFunctions = "com.google.firebase:firebase-functions-ktx"
    val firebaseStorage = "com.google.firebase:firebase-storage:${Versions.firebaseStorage}"
    val firebaseStorageKtx = "com.google.firebase:firebase-storage-ktx:${Versions.firebaseStorage}"
    val firebaseAuth = "com.google.firebase:firebase-auth-ktx:${Versions.firebaseAuth}"
    val firebaseDynamicLinks =
        "com.google.firebase:firebase-dynamic-links-ktx:${Versions.firebaseDynamicLinks}"
    val firebaseAnalytics =
        "com.google.firebase:firebase-analytics-ktx:${Versions.firebaseAnalytics}"
    val facebookLogin = "com.facebook.android:facebook-login:${Versions.facebook}"
    val circleImage = "de.hdodenhof:circleimageview:${Versions.circleImage}"
    val droopy = "com.shehabic.droppy:Droppy:${Versions.droopy}"
    val stfalcon = "com.github.stfalcon:stfalcon-imageviewer:${Versions.stfalcon}"
    val easyprefs = "com.pixplicity.easyprefs:library:${Versions.easyprefs}"
    val dToast = "com.github.Dovar66:DToast:${Versions.dToast}"
    val stripe = "com.stripe:stripe-android:${Versions.stripe}"
    val permissionDispatcher =
        "com.github.permissions-dispatcher:permissionsdispatcher:${Versions.permissionDispatcher}"
    val permissionDispatcherProcessor =
        "com.github.permissions-dispatcher:permissionsdispatcher-processor:${Versions.permissionDispatcher}"
    val pagingLibrary = "androidx.paging:paging-runtime-ktx:${Versions.pagingVersion}"
    val pagingCommonLibrary = "androidx.paging:paging-common:${Versions.pagingVersion}"
    val crashReportingLib = "ch.acra:acra-mail:${Versions.acraVersion}"
    val crashReportingCore= "ch.acra:acra-core:${Versions.acraVersion}"

    val hilt = "com.google.dagger:hilt-android:${Versions.hilt}"
    val hiltKapt = "com.google.dagger:hilt-compiler:${Versions.hilt}}"
}
